From 4a8c1909cdedf7ee656707216b3061bc0153d93e Mon Sep 17 00:00:00 2001
From: Brecht Neyrinck <bnrn@psicontrol.com>
Date: Mon, 2 Mar 2015 16:28:35 +0100
Subject: [PATCH] changes for micrel ksz8873 switch - phy.h: overrule of the
 MDIO read for phy0 -> return link status of phy1 | phy2 - micrel.c: change
 the read status function to make the call to the read function of phy.h

---
 drivers/net/phy/micrel.c | 34 +++++++++++++++-------------------
 include/linux/phy.h      |  9 +++++++++
 2 files changed, 24 insertions(+), 19 deletions(-)
 mode change 100644 => 100755 drivers/net/phy/micrel.c
 mode change 100644 => 100755 include/linux/phy.h

diff --git a/drivers/net/phy/micrel.c b/drivers/net/phy/micrel.c
old mode 100644
new mode 100755
index 2510435..924098c
--- a/drivers/net/phy/micrel.c
+++ b/drivers/net/phy/micrel.c
@@ -146,24 +146,14 @@ static int ks8051_config_init(struct phy_device *phydev)
 #define KSZ8873MLL_GLOBAL_CONTROL_4_SPEED	(1 << 4)
 int ksz8873mll_read_status(struct phy_device *phydev)
 {
-	int regval;
-
-	/* dummy read */
-	regval = phy_read(phydev, KSZ8873MLL_GLOBAL_CONTROL_4);
-
-	regval = phy_read(phydev, KSZ8873MLL_GLOBAL_CONTROL_4);
+    int retval;
 
-	if (regval & KSZ8873MLL_GLOBAL_CONTROL_4_DUPLEX)
-		phydev->duplex = DUPLEX_HALF;
-	else
-		phydev->duplex = DUPLEX_FULL;
+    retval = phy_read(phydev, MII_BMSR);
+    
+    phydev->duplex = DUPLEX_FULL;
+    phydev->speed = SPEED_100;
 
-	if (regval & KSZ8873MLL_GLOBAL_CONTROL_4_SPEED)
-		phydev->speed = SPEED_10;
-	else
-		phydev->speed = SPEED_100;
-
-	phydev->link = 1;
+	phydev->link = (retval & BMSR_LSTATUS) ? 1 : 0;
 	phydev->pause = phydev->asym_pause = 0;
 
 	return 0;
@@ -314,11 +304,17 @@ static struct phy_driver ksphy_driver[] = {
 	.phy_id		= PHY_ID_KSZ886X,
 	.phy_id_mask	= 0x00fffff0,
 	.name		= "Micrel KSZ886X Switch",
-	.features	= (PHY_BASIC_FEATURES | SUPPORTED_Pause),
-	.flags		= PHY_HAS_MAGICANEG | PHY_HAS_INTERRUPT,
+	.features	= (SUPPORTED_10baseT_Half | \
+				 SUPPORTED_10baseT_Full | \
+				 SUPPORTED_100baseT_Half | \
+				 SUPPORTED_100baseT_Full | \
+				 SUPPORTED_TP | \
+				 SUPPORTED_MII | \
+                 SUPPORTED_Pause),
+	.flags		= PHY_HAS_MAGICANEG,
 	.config_init	= kszphy_config_init,
 	.config_aneg	= genphy_config_aneg,
-	.read_status	= genphy_read_status,
+	.read_status	= ksz8873mll_read_status,
 	.driver		= { .owner = THIS_MODULE, },
 } };
 
diff --git a/include/linux/phy.h b/include/linux/phy.h
old mode 100644
new mode 100755
index 9e11039..7e86765
--- a/include/linux/phy.h
+++ b/include/linux/phy.h
@@ -490,6 +490,15 @@ struct phy_fixup {
  */
 static inline int phy_read(struct phy_device *phydev, u32 regnum)
 {
+    int val1, val2;
+    if (regnum == MII_BMSR)
+    {
+        val1 = mdiobus_read(phydev->bus, 1, regnum);   // check if phy1 link is on  (BMSR_LSTATUS)
+        val2 = mdiobus_read(phydev->bus, 2, regnum);   // check if phy2 link is on  (BMSR_LSTATUS)
+
+        return ( ((val1 | val2) & BMSR_LSTATUS) | BMSR_100FULL | BMSR_ANEGCOMPLETE);
+    }
+
 	return mdiobus_read(phydev->bus, phydev->addr, regnum);
 }
 
-- 
1.8.2.3

